@using X.PagedList
@using X.PagedList.Mvc.Core

@model IPagedList<CakeItWebApp.ViewModels.CakeIndexViewModel>

<main class="container">
    @if (ViewData["SentEmail"] != null)
    {
        <div class="alert alert-warning alert-dismissible fade show m-4" role="alert">
            <strong style="font-size:2rem; color: forestgreen">@ViewData["SentEmail"]</strong>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (TempData["Rate"] != null)
    {
        <div class="alert alert-warning alert-dismissible fade show m-4" role="alert">
            <strong style="font-size:2rem; color: forestgreen">@TempData["Rate"]</strong>
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <!-- Page Heading -->
    <h1 class="my-4">
        <small>Cakes</small>
    </h1>

    <!--List cakes-->
    <div class="row justify-content-around">
        @for (int i = 0; i < Model.Count; i++)
        {
            <div class="col-lg-4 col-sm-6 portfolio-item">
                <div class="card h-100">
                    <a asp-controller="Cakes" asp-action="Details" asp-route-id="@Model[i].Id"><img class="card-img-top" src="@Model[i].Image" alt=""></a>
                    <div class="card-body">
                        <h4 class="card-title">
                            @Model[i].Name
                        </h4>
                        <h4 class="card-title">
                            $@Model[i].Price
                        </h4>
                        <p class="card-text">@Model[i].Description</p>
                    </div>
                    @if (this.User.IsInRole("Admin"))
                    {
                        <div class="button-holder d-flex justify-content-around">
                            <a asp-controller="Cakes" asp-action="Edit" asp-route-id="@Model[i].Id" class="btn btn-info text-white mb-3">Edit</a>

                            @if (Model[i].IsDeleted)
                            {
                                <!--disable buttons-->
                                <a asp-controller="Cakes" asp-action="Delete" asp-route-id="@Model[i].Id" class="btn btn-danger text-white mb-3 disabled">Delete</a>

                                <div class="button-holder d-flex justify-content-center">
                                    <a asp-controller="Cart" asp-action="AddToCart" asp-route-id="@Model[i].Id" class="btn btn-dark text-white mb-3 disabled">Add to Cart</a>
                                </div>
                            }
                            else
                            {
                                <a asp-controller="Cakes" asp-action="Delete" asp-route-id="@Model[i].Id" class="btn btn-danger text-white mb-3">Delete</a>
                                <div class="button-holder d-flex justify-content-center">
                                    <a asp-controller="Cart" asp-action="AddToCart" asp-route-id="@Model[i].Id" class="btn btn-dark text-white mb-3">Add to Cart</a>
                                </div>
                            }

                        </div>
                    }
                    else
                    {
                        <div class="button-holder d-flex justify-content-center">
                            <a asp-controller="Cart" asp-action="AddToCart" asp-route-id="@Model[i].Id" class="btn btn-dark text-white mb-3">Add to Cart</a>
                        </div>
                    }


                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }), new X.PagedList.Mvc.Common.PagedListRenderOptionsBase
    {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
})
</main>

