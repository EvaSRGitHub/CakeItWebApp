@using X.PagedList
@using X.PagedList.Mvc.Core

@model IPagedList<CakeItWebApp.ViewModels.CakeIndexViewModel>
<main class="container">
@if (ViewData["SentEmail"] != null)
{
<div class="alert alert-warning alert-dismissible fade show m-4" role="alert">
    <strong style="font-size:2rem; color: forestgreen">@ViewData["SentEmail"]</strong>
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
}
<!-- Page Heading -->

<h1 class="my-4">
    Out Cakes
    <small>CakeIt</small>
</h1>
<div class="row justify-content-around">
    @for (int i = 0; i < Model.Count; i++)
    {
        <div class="col-lg-4 col-sm-6 portfolio-item">
            <div class="card h-100">
                <img class="card-img-top" src="@Model[i].Image" alt="">
                <div class="card-body">
                    <h4 class="card-title">
                        @Model[i].Name
                    </h4>
                    <h4 class="card-title">
                        $@Model[i].Price
                    </h4>
                    <p class="card-text">@Model[i].Description</p>
                </div>
                @if (this.User.IsInRole("Admin"))
                {
                    <div class="button-holder d-flex justify-content-around">
                        <a asp-controller="Cakes" asp-action="Edit" asp-route-id="@Model[i].Id" class="btn btn-info text-white mb-3">Edit</a>
                        <a asp-controller="Cakes" asp-action="Delete" asp-route-id="@Model[i].Id" class="btn btn-danger text-white mb-3">Delete</a>
                    </div>
                }
                <div class="button-holder d-flex justify-content-center">
                    <a asp-controller="ShoppingCart" asp-action="AddToCart" asp-route-id="@Model[i].Id" class="btn btn-dark text-white mb-3">Add to Cart</a>
                </div>
            </div>
        </div>
    }
</div>
<!-- /.row -->
<!-- Pagination -->
<ul class="pagination justify-content-center">
    <li class="page-item">
        <a class="page-link" href="#" aria-label="Previous">
            <span aria-hidden="true">&laquo;</span>
            <span class="sr-only">Previous</span>
        </a>
    </li>
    <li class="page-item">
        <a class="page-link" href="#">1</a>
    </li>
    <li class="page-item">
        <a class="page-link" href="#">2</a>
    </li>
    <li class="page-item">
        <a class="page-link" href="#">3</a>
    </li>
    <li class="page-item">
        <a class="page-link" href="#" aria-label="Next">
            <span aria-hidden="true">&raquo;</span>
            <span class="sr-only">Next</span>
        </a>
    </li>
</ul>

@Html.PagedListPager(Model, page => Url.Action("Index", "Cakes", new { page }))
</main>

